set background=dark
set backspace=indent,eol,start
set fileencodings=ucs-bom,utf-8,default,latin1
set helplang=en
set history=700
set undolevels=700
set nomodeline
set printoptions=paper:a4
set ruler
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc
set termencoding=utf-8
set window=25
" vim: set ft=vim :
set hlsearch
set nu " rnu
set ai
"set nobackup
"set noswapfile
let g:fuzzy_ignore = "*.png;*.PNG;*.JPG;*.jpg;*.GIF;*.gif;vendor/**;coverage/**;tmp/**;rdoc/**"
" set pastetoggle=<F2>
" set clipboard=unnamed
set smartcase
set ignorecase
set incsearch
let g:pymode_rope = 0
"set tabstop=4 softtabstop=4 shiftwidth=4
set noet ci pi sts=0 sw=4 ts=4 "Indent with tabs, align with spaces
" highlight Test ctermbg=black guibg=black
" match Test /\t/
"filetype plugin on
" set omnifunc=pythoncomplete#Complete
nmap <Space> i_<Esc>r
map <F5> :syntax sync fromstart<CR>
map <F7> :tabp<CR>
map <F8> :tabn<CR>
map <Leader>pw ciw<C-r>0<Esc>
map <Leader>p' ci'<C-r>0<Esc>
map <Leader>p" ci"<C-r>0<Esc>
map <Leader>p( ci(<C-r>0<Esc>
map <Leader>p{ ci{<C-r>0<Esc>
map <Leader>p[ ci[<C-r>0<Esc>
map <Leader>pp "0p
map <Leader>op o<C-r>0<Esc>
map <Leader>nt :NERDTree %:h<CR>
nnoremap <buffer> <F9> :exec '!python' shellescape(@%, 1)<cr>
" map <C-s> :w<CR><Esc>
iab docid document.getElementById('')<Esc>hh
" set listchars=tab:▸\ ,eol:¬
set listchars=tab:\|\ 
set list
call pathogen#infect()
autocmd BufEnter *.aspx,*.html,*.js,*.py :syntax sync fromstart
set foldcolumn=1
set spelllang=en_gb
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadBraces
set cursorline
set laststatus=2
if version >= 700
  au InsertEnter * hi StatusLine ctermfg=15 ctermbg=0 guifg=white guibg=black
  au InsertLeave * hi StatusLine ctermfg=0 ctermbg=15 guifg=#455354 guibg=white
endif
"set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
"let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_quiet_messages = { "regex": ["multiple-statements","broad-except","bare-except","bad-whitespace","Final newline","Line too long","docstring","indentation with tabs","invalid-name","Exactly one space","Too many","redefined-outer-name"] }
"let g:syntastic_html_checkers = ['jshint']
syntax on
set showcmd		" display incomplete commands
set wildmenu
set lazyredraw
inoremap jk <esc>
map <silent> <leader>cf :call writefile([], expand("<cfile>"), "t")<cr>
set scrolloff=5
" after search, scroll screen to centre
nnoremap n nzz
nnoremap N Nzz
nnoremap * *zz
nnoremap # #zz
nnoremap g* g*zz
nnoremap g# g#zz
" make paren highlighting more obvious
hi MatchParen cterm=bold ctermbg=darkgrey ctermfg=lightgrey
" make Y do y$ instead of yy
nnoremap Y y$
" keep multi-cursor after escape from insert
let g:multi_cursor_exit_from_insert_mode = 0
